/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const get_canvas_fingerprint: (a: number) => void;
export const get_webgl_fingerprint: (a: number) => void;
export const get_audio_fingerprint: () => number;
export const get_audio_fingerprint_hash: () => number;
export const __wbg_portcontentionfingerprint_free: (a: number, b: number) => void;
export const get_port_contention_fingerprint: (a: number) => void;
export const get_port_contention_detailed: (a: number) => void;
export const grouped_execution_popcnt_or: (a: number) => number;
export const interleaved_execution_popcnt_or: (a: number) => number;
export const grouped_execution_clz_and: (a: number) => number;
export const interleaved_execution_clz_and: (a: number) => number;
export const grouped_execution_ctz_xor: (a: number) => number;
export const interleaved_execution_ctz_xor: (a: number) => number;
export const grouped_execution_rotl_shl: (a: number) => number;
export const interleaved_execution_rotl_shl: (a: number) => number;
export const grouped_execution_mul_add: (a: number) => number;
export const interleaved_execution_mul_add: (a: number) => number;
export const measure_wasm_port_contention: (a: number, b: number, c: number, d: number) => void;
export const run_all_wasm_benchmarks: (a: number) => void;
export const generate_wasm_fingerprint: (a: number) => void;
export const __wbg_fingerprintcollector_free: (a: number, b: number) => void;
export const fingerprintcollector_new: (a: number) => void;
export const fingerprintcollector_run_hardware_benchmarks: (a: number, b: number) => void;
export const fingerprintcollector_collect_fingerprint: (a: number) => number;
export const fingerprintcollector_get_composite_hash: (a: number, b: number) => void;
export const fingerprintcollector_send_to_server: (a: number, b: number, c: number) => number;
export const log_window_details: () => void;
export const __wbg_wasmportbenchmark_free: (a: number, b: number) => void;
export const __wbindgen_export_0: (a: number) => void;
export const __wbindgen_export_1: (a: number, b: number) => number;
export const __wbindgen_export_2: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_export_3: WebAssembly.Table;
export const __wbindgen_add_to_stack_pointer: (a: number) => number;
export const __wbindgen_export_4: (a: number, b: number, c: number) => void;
export const __wbindgen_export_5: (a: number, b: number, c: number) => void;
export const __wbindgen_export_6: (a: number, b: number, c: number, d: number) => void;
